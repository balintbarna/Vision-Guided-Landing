<launch>
  <arg name="mav_name" default="hummingbird"/>
  <arg name="world_name" default="vision_guided_landing_envir"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

	<param name="calibrate_a_world_x" value="0.0" />
	<param name="calibrate_a_world_y" value="0.0" />
	<param name="calibrate_a_image_x" value="606.0" />
	<param name="calibrate_a_image_y" value="922.0" />

	<param name="calibrate_b_world_x" value="-0.015" />
	<param name="calibrate_b_world_y" value="1.800" />
	<param name="calibrate_b_image_x" value="646.0" />
	<param name="calibrate_b_image_y" value="198.0" />

	<param name="calibrate_c_world_x" value="2.425" />
	<param name="calibrate_c_world_y" value="1.950" />
	<param name="calibrate_c_image_x" value="1591.0" />
	<param name="calibrate_c_image_y" value="242.0" />

	<param name="calibrate_d_world_x" value="2.520" />
	<param name="calibrate_d_world_y" value="0.545" />
	<param name="calibrate_d_image_x" value="1619.0" />
	<param name="calibrate_d_image_y" value="813.0" />
	<param name="image_downscale_factor" value="2.0" />

        <!-- locate a marker of order 4 -->
        <node pkg="markerlocator" name="markerlocator_4" type="MarkerLocatorROS.py" output="screen">
            <param name="markerimage_sub" value="/markerlocator/image_raw" />
            <param name="markerpose_pub" value="/markerlocator/markerpose_4" />
            <param name="marker_order" value="4" />
            <param name="marker_size" value="28" /> <!-- pixels -->
            <param name="show_image" value="True" />
            <param name="print_debug_messages" value="False" />
        </node>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="true"/>
    <!-- <arg name="gui" value="false"/> -->
    <!-- <arg name="verbose" value="true"/> -->
  </include>

  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_vi_sensor_downward.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>
</launch>
